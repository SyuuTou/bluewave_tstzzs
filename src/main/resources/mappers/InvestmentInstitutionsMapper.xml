<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjl.tzzs.proxy.mapper.InvestmentInstitutionsMapper">
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.InvestmentInstitutions">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="kenel_case" jdbcType="VARCHAR" property="kenelCase" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="home_url" jdbcType="VARCHAR" property="homeUrl" />
    <result column="commet" jdbcType="VARCHAR" property="commet" />
    <result column="key_words" jdbcType="VARCHAR" property="keyWords" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="case_url" jdbcType="VARCHAR" property="caseUrl" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="representative" jdbcType="VARCHAR" property="representative" />
    <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="yn" jdbcType="INTEGER" property="yn" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="total_fund_scale" jdbcType="DECIMAL" property="totalFundScale" />
    <result column="rmb_fund_scale" jdbcType="DECIMAL" property="rmbFundScale" />
    <result column="dollar_fund_scale" jdbcType="DECIMAL" property="dollarFundScale" />
    <result column="rmb_invest_amount_min" jdbcType="DECIMAL" property="rmbInvestAmountMin" />
    <result column="rmb_invest_amount_max" jdbcType="DECIMAL" property="rmbInvestAmountMax" />
    <result column="dollar_invest_amount_min" jdbcType="DECIMAL" property="dollarInvestAmountMin" />
    <result column="dollar_invest_amount_max" jdbcType="DECIMAL" property="dollarInvestAmountMax" />
    <result column="investment_idea" jdbcType="VARCHAR" property="investmentIdea" />
    <result column="product_requirement" jdbcType="VARCHAR" property="productRequirement" />
    <result column="recruitment_requirement" jdbcType="VARCHAR" property="recruitmentRequirement" />
  </resultMap>

  <resultMap id="BaseResultMapNew" type="com.lhjl.tzzs.proxy.model.InvestmentInstitutionsNew">

        <id column="ID" jdbcType="INTEGER" property="id" />
        <result column="short_name" jdbcType="VARCHAR" property="shortName" />
        <result column="commet" jdbcType="VARCHAR" property="commet" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="logo" jdbcType="VARCHAR" property="logo" />
        <result column="case_url" jdbcType="VARCHAR" property="caseUrl" />
        <result column="kenel_case" jdbcType="VARCHAR" property="kenelCase" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="stage" jdbcType="VARCHAR" property="stage" />
        <result column="representative" jdbcType="VARCHAR" property="representative" />
        <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
        <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
        <!--自定义字段，数据库中不存在，表示投资项目数量-->
        <result column="projects_num" jdbcType="INTEGER" property="projectsNum" />
    </resultMap>


    <resultMap id="newDtoMap" type="com.lhjl.tzzs.proxy.dto.InvestmentInstitutionsDto">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID" jdbcType="INTEGER" property="id" />
        <result column="short_name" jdbcType="VARCHAR" property="shortName" />
        <result column="commet" jdbcType="VARCHAR" property="commet" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="logo" jdbcType="VARCHAR" property="logo" />
        <result column="case_url" jdbcType="VARCHAR" property="caseUrl" />
        <result column="kenel_case" jdbcType="VARCHAR" property="kenelCase" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="stage" jdbcType="VARCHAR" property="stage" />
        <result column="representative" jdbcType="VARCHAR" property="representative" />
        <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
        <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
        <result column="home_url" jdbcType="VARCHAR" property="homeUrl" />
        <result column="yn" jdbcType="INTEGER" property="yn" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="count" jdbcType="INTEGER" property="count" />
        <result column="home_url" jdbcType="VARCHAR" property="homeUrl" />
        <result column="yn" jdbcType="INTEGER" property="yn" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="count" jdbcType="INTEGER" property="count" />

    </resultMap>
    <insert id="add" keyProperty="id" parameterType="com.lhjl.tzzs.proxy.model.InvestmentInstitutions" useGeneratedKeys="true">
        insert into investment_institutions(short_name, commet,create_time) values(#{shortName}, #{commet}, #{createTime} )
    </insert>

    <select id="findByInvestmentShortNameAll" parameterType="String" resultType="java.util.HashMap">
        SELECT b.*,
        (SELECT COUNT(*) FROM follow_investment a WHERE a.investment_id = b.`ID` AND a.yn = 1)num,
        (SELECT MAX(f.yn)s FROM follow_investment f WHERE f.user_id = #{userId, jdbcType=VARCHAR} AND f.investment_id = b.`ID` GROUP BY f.investment_id )yn
        FROM investment_institutions b
        WHERE short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
    </select>

    <select id="findInvestment50" resultType="java.util.HashMap">
        SELECT ii.id, ii.short_name shortName,  ii.create_time, ii.type, ii.logo, ii.kenel_case kenelCase, ii.count
        FROM investment_institutions ii
        WHERE ii.type = 1 AND  ii.logo IS NOT NULL AND ii.logo != '' AND ii.count is not null
        ORDER BY ii.sort
        <if test="beginNum != null and pageSize != null">
            LIMIT #{beginNum},#{pageSize}
        </if>
    </select>

    <select id="findInvestmentall" resultType="java.util.HashMap">
        SELECT ii.id, ii.short_name shortName,  ii.create_time, ii.type, ii.logo, ii.kenel_case kenelCase, ii.count
        FROM investment_institutions ii
        WHERE  ii.logo IS NOT NULL AND ii.logo != '' AND ii.count is not null
        ORDER BY ii.count desc
        <if test="beginNum != null and pageSize != null">
            LIMIT #{beginNum},#{pageSize}
        </if>
    </select>

    <select id="findeInvestmentByShortName" parameterType="String" resultMap="BaseResultMap">
        select * from investment_institutions where 1=1
        <if test="shortName != null and shortName !=''">
            and short_name like concat(concat("%",#{shortName}),"%")
        </if>
        GROUP BY `short_name`
        order by sort desc
        limit #{startPage},#{pageSize}
    </select>
    <select id="serachInstitution" resultMap="newDtoMap">
        SELECT ii.id, ii.short_name,ii.create_time,ii.type,ii.logo,ii.kenel_case,ii.count,ii.sort FROM
        (SELECT ii.id, ii.short_name,  ii.create_time, ii.type, ii.logo, CASE when ii.kenel_case is NULL or ii.kenel_case = ''  then ii.`comment` ELSE ii.kenel_case END kenel_case, ii.count,ii.sort
        FROM investment_institutions ii
        WHERE  ii.short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
        UNION ALL
        SELECT ii.id, ii.short_name,  ii.create_time, ii.type, ii.logo, CASE when ii.kenel_case is NULL or ii.kenel_case = ''  then ii.`comment` ELSE ii.kenel_case END kenel_case, ii.count,ii.sort
        FROM investment_institutions ii
        WHERE  ii.kenel_case LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')) ii
        GROUP BY ii.short_name
        ORDER BY ii.sort
        LIMIT #{beginNum},#{pageSize}
    </select>

    <select id="screenInstitutionAll" resultMap="newDtoMap">
        SELECT ii.id, ii.short_name,ii.create_time,ii.type,ii.logo,ii.kenel_case,ii.count,ii.sort FROM
        investment_institutions ii
        WHERE  1=1
        <if test=" types !='' and types != null">
            AND ii.type IN
            <foreach close=")" collection="types" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        <if test=" workArray !='' and workArray != null">
            AND ii.id IN
            <foreach close=")" collection="workArray" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        GROUP BY ii.short_name
        ORDER BY ii.count desc
        LIMIT #{beginNum},#{pageSize}
    </select>

    <select id="serachSendProjectId"  resultType="int">
        SELECT investment_institution_id FROM  project_financing_investment_institution_relationship WHERE
        project_send_log_id IN
        <foreach close=")" collection="workArray1" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </select>

    <select id="serachSendProjectIdZ"  resultType="int">
        SELECT investment_institution_id FROM  project_financing_investment_institution_relationship WHERE
        project_send_log_id IN
        <foreach close=")" collection="workArray1" index="index" item="item" open="(" separator=",">#{item}</foreach>
        group by investment_institution_id
    </select>

    <select id="findInvestment50New" resultMap="newDtoMap">

        SELECT
        COUNT(1) count, c.short_name,c.create_time,c.type,c.logo,c.kenel_case,c.comment,c.id
        FROM
        (SELECT
        ii.id, ii.short_name,ii.create_time,ii.type,ii.logo,ii.kenel_case,ii.comment,
        CASE
        WHEN p.full_name IS NULL OR p.full_name = '' THEN p.short_name
        ELSE p.full_name
        END p_name,
        pf.financing_time
        FROM
        project_financing_log pf
        LEFT JOIN projects p ON pf.project_id = p.id
        LEFT JOIN investment_institutions_project iip ON iip.project_id = pf.id
        LEFT JOIN investment_institutions ii ON iip.investment_institutions_id = ii.id
        WHERE
        pf.financing_time BETWEEN  #{beginTime} and #{endTime}
        AND pf.stage IN ('种子轮' , '天使轮', 'Pre-A轮')
        AND ii.type = 1
        GROUP BY p_name , pf.stage) c  where c.short_name != ''  and c.short_name is not null
        GROUP BY c.short_name          ORDER BY count desc
        <if test="beginNum != null and pageSize != null">
            LIMIT #{beginNum},#{pageSize}
        </if>
    </select>

    <select id="findInvestmentallNew" resultMap="newDtoMap">
        select  ii.id, ii.short_name,ii.create_time,ii.type,ii.logo,ii.kenel_case,ii.comment,d.cont count  from (SELECT c.short_name,SUM(c.cc) cont  from (
        SELECT a.short_name ,count(DISTINCT(p_name)) cc FROM (

        select  case when p.full_name is null or p.full_name = '' then p.short_name else p.full_name end p_name, pf.`stage` , p.`city` , ii.`short_name`    from project_financing_log  pf
        left join projects p on pf.project_id = p.id LEFT join investment_institutions_project iip on iip.project_id = pf.id
        left join investment_institutions ii on iip.investment_institutions_id = ii.id
        where pf.financing_time between  #{beginTime} and #{endTime}  and  trim(pf.stage) in ('种子轮','天使轮','Pre-A轮') and p.`country` = '中国' AND ii.`short_name` IS NOT NULL AND ii.`short_name` NOT LIKE  '%个人%' and ii.`short_name` not in ('自投','自筹') and ii.`short_name`  NOT LIKE '%天使投资人%'
        GROUP BY p_name , ii.`short_name`      ) a   GROUP BY a.short_name
        ) c GROUP BY c.short_name  ORDER BY SUM(c.cc) DESC ) d LEFT JOIN `investment_institutions` ii on d.short_name = ii.`short_name`
        where ii.`logo` IS NOT NULL
        <if test="beginNum != null and pageSize != null">
            LIMIT #{beginNum},#{pageSize}
        </if>
    </select>
    <select id="deliverySendProjectId"  resultType="int">
       SELECT investment_institution_id FROM  project_financing_investment_institution_relationship WHERE
        project_send_log_id IN
        <foreach close=")" collection="workArray1" index="index" item="item" open="(" separator=",">#{item}</foreach>
         ORDER BY  associated_time DESC
    </select>
    <select id="findRecommendAll"   resultMap="newDtoMap">
        SELECT ii.id, ii.short_name,ii.create_time,ii.type
        ,case when ii.logo is null or ii.logo = "" then "http://img.idatavc.com/static/logo/jg_default.png" else ii.logo end logo,
        case when ii.kenel_case is null then (case when ii.`comment` is null then "" else ii.`comment` end ) else ii.kenel_case end kenel_case,
        case when ii.count is null then 0 else ii.count end count,ii.sort FROM
        investment_institutions ii
        WHERE  1=1

        <if test=" workArray2 !='' and workArray2 != null">
            AND ii.id IN
            <foreach close=")" collection="workArray2" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>

        GROUP BY ii.short_name
        ORDER BY ii.sort
    </select>
    <select id="findRecommendInvestor"   resultMap="newDtoMap">
        SELECT ii.id, ii.short_name,ii.create_time,ii.type,ii.logo,ii.kenel_case,ii.count,ii.sort FROM
        investment_institutions ii
        WHERE  1=1
        <!--<if test=" types !='' and types != null">
            AND ii.type IN
            <foreach close=")" collection="types" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>-->
        <if test=" workArray3 !='' and workArray3 != null">
            AND ii.short_name IN
            <foreach close=")" collection="workArray3" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        AND ii.logo IS NOT NULL AND ii.logo != '' AND ii.count IS NOT NULL
        GROUP BY ii.short_name
        ORDER BY ii.sort
    </select>
    <select id="findRecentlyActiveInstitution" resultMap="newDtoMap">
        SELECT ii.* FROM
        investment_institutions ii
        LEFT JOIN (
        SELECT iip.investment_institutions_id,iip.financing_time FROM
        (SELECT iip.investment_institutions_id,pfl.financing_time
        FROM project_financing_log pfl
        LEFT JOIN investment_institutions_project iip ON  iip.project_id = pfl.ID
        WHERE investment_institutions_id IS NOT NULL
        ORDER BY pfl.financing_time DESC
        ) iip
        GROUP BY  iip.investment_institutions_id
        ORDER BY iip.financing_time DESC) u  ON u.investment_institutions_id =ii.id
        WHERE ii.short_name is not null
        AND ii.short_name != ""
        ORDER BY u.financing_time DESC
        limit #{startPage},#{pageSize}
    </select>
  	<select id="getLastInsertId" resultType="Integer">
  		SELECT LAST_INSERT_ID()
  	</select>
    <select id="filterInvestmentInstitution" resultMap="BaseResultMap">
        SELECT ii.* FROM investment_institutions ii
        <if test="domains != null and domains !=''">
            left join investment_institutions_segmentation iis on ii.ID = iis.investment_institutions_id
            left join meta_segmentation ms on iis.meta_segmentation_id = ms.id
        </if>
       <if test="stages != null and stages != ''">
           left join investment_institutions_stage iist on ii.id = iist.investment_institution_id
           left join meta_project_stage mps on iist.meta_project_stage_id = mps.id
       </if>
        where 1=1
        <if test="domains != null and domains !=''">
            and ms.`name` in
            <foreach close=")" collection="domains" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        <if test="stages != null and stages !=''">
            and mps.`name` in
            <foreach close=")" collection="stages" index="index" item="item" open="(" separator=",">#{item}</foreach>
        </if>
        <if test="types != null and types !=''">
            and ii.types = #{types}
        </if>
        group by ii.short_name
        order by ii.count desc
        limit #{startPage},#{pageSize}
    </select>

    <select id="selectUserApprovalInstitution" resultType="java.lang.Integer">
        SELECT ii.id FROM project_financing_investment_institution_relationship pfiir
        left join project_send_logs psl on pfiir.project_send_log_id = psl.id
        left join investment_institutions ii on pfiir.investment_institution_id = ii.id
        where userid = #{userId}
        group by short_name
        order by ii.id;
    </select>
</mapper>