<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhjl.tzzs.proxy.mapper.ProjectsMapper" >
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.Projects" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="serial_number" property="serialNumber" jdbcType="INTEGER" />
    <result column="short_name" property="shortName" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="kernel_desc" property="kernelDesc" jdbcType="VARCHAR" />
    <result column="commet" property="commet" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="established_time" property="establishedTime" jdbcType="DATE" />
    <result column="segmentation" property="segmentation" jdbcType="VARCHAR" />
    <result column="item_label" property="itemLabel" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="territory" property="territory" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="continent" property="continent" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="investment_institutions_id" property="investmentInstitutionsId" jdbcType="INTEGER" />
      <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
      <result column="approval_time" jdbcType="TIMESTAMP" property="approval_time" />
  </resultMap>
   
    <!-- 用户关注的项目 -->

  <select id="findProjectByUserId" resultType="java.util.HashMap" >
   <!-- SELECT b.id ID,b.short_name,b.kernel_desc,b.`city`,b.`segmentation`,b.stage
    FROM follow a LEFT JOIN view_projects_info b ON a.`projects_id` = b.`ID`
    WHERE a.user_id = #{userId}  AND a.`status` = 1-->

     SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation` segmentation_name,
    (SELECT stage FROM project_financing_log WHERE project_id = mf.`id` ORDER BY financing_time DESC LIMIT 1)stage
    FROM follow a LEFT JOIN projects mf  ON a.`projects_id` = mf.`ID`
    WHERE a.user_id = #{userId}  AND a.`status` = 1
    GROUP BY mf.`id`  ORDER BY a.create_time DESC LIMIT #{beginNum},#{pageSize}
  </select>
   <!-- <select id="findProjectByShortName" parameterType="String" resultMap="BaseResultMap" >
    SELECT p.*,s.* FROM projects p LEFT JOIN (SELECT ff.* FROM follow ff WHERE ff.ID IN(SELECT MAX(f.ID) FROM follow f GROUP BY  f.projects_id)) s ON p.ID=s.projects_id WHERE p.`short_name` LIKE '%"#{shortName}"%';
  </select> -->
    <select id="findProjectByShortNameAll" resultType="java.util.HashMap">
        <!-- SELECT b.*,
        (SELECT COUNT(*) FROM follow a WHERE a.projects_id = b.`ID` AND a.status = 1)num,
        (SELECT MAX(f.status)s FROM follow f WHERE f.user_id = #{userId,jdbcType=VARCHAR}) AND f.projects_id = b.`ID` GROUP BY f.projects_id ) zz
        FROM projects b
        WHERE short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')  -->
        SELECT ID, short_name, kernel_desc,city,segementation segmentation_name, stage FROM (
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE    mf.short_name like CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
        UNION  ALL
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   ps.segmentation_name like  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
        UNION ALL
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   mf.kernel_desc LIKE  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
        UNION ALL
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   mf.item_label LIKE  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
        ) a
        GROUP BY a.short_name , a.stage
        ORDER BY a.evaluation_recommend DESC LIMIT #{sizea},#{froma}
    </select>
    <select id="findProjectByShortName"  parameterType="String" resultType="java.util.HashMap">
         <!-- SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,stage.stage
          FROM projects mf
          LEFT JOIN (SELECT s.project_id,s.stage,s.financing_time FROM project_financing_log s GROUP BY s.`project_id` ORDER BY financing_time DESC)stage ON mf.`id` = stage.project_id
          WHERE
          mf.short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.kernel_desc LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT project_id FROM project_segmentation WHERE segmentation_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN
          (SELECT project_id FROM project_financing_log WHERE stage  LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.city LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT f.project_id FROM founders_work fw LEFT JOIN founders f ON fw.founder_id = f.id WHERE fw.work_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN (SELECT f.project_id FROM founders_education fe LEFT JOIN founders f ON fe.founder_id = f.id WHERE fe.education_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')) 
          GROUP BY mf.id LIMIT 3-->

          SELECT ID, short_name, kernel_desc,city,segementation segmentation_name, stage FROM (
          SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   mf.short_name like CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          UNION  ALL
          SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   ps.segmentation_name like  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          UNION ALL
          SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   mf.kernel_desc LIKE  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          UNION ALL
          SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.city, ps.segmentation_name segementation , pfl.stage,mf.evaluation_recommend FROM projects mf RIGHT JOIN project_segmentation ps ON ps.project_id = mf.id LEFT JOIN project_financing_log pfl ON mf.id = pfl.project_id  WHERE   mf.item_label LIKE  CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
           ) a
           GROUP BY short_name,stage
           ORDER BY a.evaluation_recommend DESC LIMIT 3
    </select>

    <select id="findProjectBySegmentation" parameterType="com.lhjl.tzzs.proxy.dto.SereachDto" resultType="java.util.HashMap">
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation` segementation,mf.stage
        FROM view_segemention_info mf where 1=1
        <if test=" types !='' and types != null">
            AND mf.investment_institutions_type IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>
        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND mf.segmentation IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" stages !='' and stages != null">
            AND mf.stage IN
            <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
        </if>

        GROUP BY mf.id LIMIT #{sizea},#{froma}
    </select>

    <select id="findProjectBySview" parameterType="com.lhjl.tzzs.proxy.dto.SereachDto" resultType="java.util.HashMap">
        select p.id ID,p.short_name,p.kernel_desc,p.city,ps.segmentation_name,pfl.stage,p.evaluation_recommend from projects p left join project_financing_log pfl on p.id = pfl.project_id
        right join project_segmentation ps on ps.project_id = p.id
        left join   investment_institutions ii on p.investment_institutions_id = ii.id
        left join founders f on f.project_id = p.id
        right join founders_education fe on fe.founder_ID = f.id
        right join founders_work fw on fw.founder_id = f.id
        where  p.project_type = 0
        <if test=" types !='' and types != null">
            AND ii.type IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>

        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND ps.segmentation_name IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>

        </if>

         <if test=" stages !='' and stages != null">
             AND mf.id IN (SELECT project_id FROM project_financing_log WHERE stage IN
             <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
             )
         </if>

        <if test=" cities !='' and cities != null ">
            AND mf.city IN
            <foreach item="item" index="index" collection="cities" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" working_background_descs!='' and working_background_descs != null">
            AND  fw.work_experience IN
            <foreach item="item" index="index" collection="working_background_descs" open="(" separator="," close=")">#{item}</foreach>

        </if>

        <if test="educational_background_descs!='' and educational_background_descs!= null">
            AND fe.education_experience IN
            <foreach item="item" index="index" collection="educational_background_descs" open="(" separator="," close=")">#{item}</foreach>

        </if>
        GROUP BY short_name, stage
        ORDER BY evaluation_recommend DESC
        LIMIT #{sizea},#{froma}
    </select>

    <select id="findByTodayProjects" resultMap="BaseResultMap" parameterType="com.lhjl.tzzs.proxy.model.Projects">
        select * from projects where investment_institutions_id =#{investmentInstitutionsId} and short_name =#{shortName} and to_days(create_time) = to_days(now())
    </select>

    <select id="maxSerialNumber" resultMap="BaseResultMap">
        select * from projects where serial_number between 100000 and 200000 order by serial_number desc;
    </select>



    <select id="findProjectBySviewA" resultType="java.util.HashMap">
        select p.id ID,p.short_name,p.kernel_desc,p.city,ps.segmentation_name,pfl.stage,p.evaluation_recommend from projects p left join project_financing_log pfl on p.id = pfl.project_id
        right join project_segmentation ps on ps.project_id = p.id
        left join   investment_institutions ii on p.investment_institutions_id = ii.id
        left join founders f on f.project_id = p.id
        right join founders_education fe on fe.founder_ID = f.id
        right join founders_work fw on fw.founder_id = f.id
        where pfl.financing_time BETWEEN '2017-01-01' and '2017-06-30'
        and pfl.stage IN('天使轮','种子轮','Pre-A轮')
        and p.project_type = 0
        <if test=" types !='' and types != null">
            AND ii.type IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>

        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND ps.segmentation_name IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>

        </if>

       <!-- <if test=" stages !='' and stages != null">
            AND mf.id IN (SELECT project_id FROM project_financing_log WHERE stage IN
            <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>-->

        <if test=" cities !='' and cities != null ">
            AND mf.city IN
            <foreach item="item" index="index" collection="cities" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" working_background_descs!='' and working_background_descs != null">
            AND  fw.work_experience IN
            <foreach item="item" index="index" collection="working_background_descs" open="(" separator="," close=")">#{item}</foreach>

        </if>

        <if test="educational_background_descs!='' and educational_background_descs!= null">
            AND fe.education_experience IN
            <foreach item="item" index="index" collection="educational_background_descs" open="(" separator="," close=")">#{item}</foreach>

        </if>
        GROUP BY short_name, stage
        ORDER BY evaluation_recommend DESC
        LIMIT #{sizea},#{froma}
    </select>

    <!--查询机构类型-->
    <select id="findIvestmentTypeById" resultType="Integer">
      SELECT ii.type FROM projects p LEFT JOIN investment_institutions ii ON p.`investment_institutions_id` = ii.`ID`
      WHERE p.ID = #{projectsId};
    </select>

    <!--处理amount的xml-->
    <select id="findProjectAmountOfZ" resultType="java.util.HashMap">
        SELECT m.short_name,f.segmentation_name,n.ID,n.stage,n.amount,n.calculation_amount_status,m.city FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.amount = 0 and n.financing_time &gt;= '2017-01-01';
    </select>

    <select id="findProjectByRoundAndE" parameterType="String" resultType="java.math.BigDecimal">
        SELECT avg(n.amount) FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.amount > 0 and n.financing_time >= '2016-07-01'
        <if test="segmentation!='null' and segmentation != null">
            and f.segmentation_name = #{segmentation}
        </if>
        <if test="stage !='null' and stage !=null">
            and n.stage = #{stage};
        </if>
    </select>

    <select id="findProjectByRoundAndC" parameterType="String" resultType="java.math.BigDecimal">
        SELECT avg(n.amount) FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.amount > 0 and n.financing_time >= '2016-07-01'
        <if test="stage!='null' and stage != null">
            and n.stage = #{stage}
        </if>
        <if test="city !='null' and city !=null">
            and m.city = #{city};
        </if>
    </select>

    <!--处理allmount的xml-->
    <select id="findProjectAllAmountOfZ" resultType="java.util.HashMap">
        SELECT m.short_name,f.segmentation_name,n.ID,n.stage,n.amount,n.total_amount,n.calculation_amount_status,m.city FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.total_amount = 0 and n.financing_time &gt;= '2016-07-01';
    </select>

    <select id="findProjectAllByRoundAndE" parameterType="String" resultType="java.math.BigDecimal">
        SELECT avg(n.total_amount) FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.total_amount > 0 and n.financing_time &gt;= '2016-07-01'
        <if test="segmentation!='null' and segmentation != null">
            and f.segmentation_name = #{segmentation}
        </if>
        <if test="stage !='null' and stage !=null">
            and n.stage = #{stage};
        </if>
    </select>

    <select id="findProjectAllByRoundAndC" parameterType="String" resultType="java.math.BigDecimal">
        SELECT avg(n.total_amount) FROM projects m left join project_financing_log n on m.ID = n.project_id right join project_segmentation f on m.ID = f.project_id where n.total_amount > 0 and n.financing_time >= '2016-07-01'
        <if test="stage!='null' and stage != null">
            and n.stage = #{stage}
        </if>
        <if test="city !='null' and city != null">
            and m.city = #{city};
        </if>
    </select>


    <resultMap id="projectMap" type="com.lhjl.tzzs.proxy.dto.ProjectValuation">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="BIGINT" property="type"/>
        <result column="segmentation" jdbcType="VARCHAR" property="segmentation"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="edu" jdbcType="VARCHAR" property="edu"/>
        <result column="work" jdbcType="VARCHAR" property="work"/>
    </resultMap>


    <select id="queryProjectValuation" resultMap="projectMap" parameterType="map">

    </select>


</mapper>