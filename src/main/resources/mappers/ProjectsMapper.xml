<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhjl.tzzs.proxy.mapper.ProjectsMapper" >
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.Projects" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="serial_number" property="serialNumber" jdbcType="INTEGER" />
    <result column="short_name" property="shortName" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="kernel_desc" property="kernelDesc" jdbcType="VARCHAR" />
    <result column="commet" property="commet" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="established_time" property="establishedTime" jdbcType="DATE" />
    <result column="segmentation" property="segmentation" jdbcType="VARCHAR" />
    <result column="item_label" property="itemLabel" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="territory" property="territory" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="continent" property="continent" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="investment_institutions_id" property="investmentInstitutionsId" jdbcType="INTEGER" />
      <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
      <result column="approval_time" jdbcType="TIMESTAMP" property="approval_time" />
  </resultMap>
   
    <!-- 用户关注的项目 -->

  <select id="findProjectByUserId" resultType="java.util.HashMap" >
   <!-- SELECT b.id ID,b.short_name,b.kernel_desc,b.`city`,b.`segmentation`,b.stage
    FROM follow a LEFT JOIN view_projects_info b ON a.`projects_id` = b.`ID`
    WHERE a.user_id = #{userId}  AND a.`status` = 1-->

     SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,
    (SELECT stage FROM project_financing_log WHERE project_id = mf.`id` ORDER BY financing_time DESC LIMIT 1)stage
    FROM follow a LEFT JOIN projects mf  ON a.`projects_id` = mf.`ID`
    WHERE a.user_id = #{userId}  AND a.`status` = 1
    GROUP BY mf.`id`  ORDER BY a.create_time DESC LIMIT #{beginNum},#{pageSize}
  </select>
   <!-- <select id="findProjectByShortName" parameterType="String" resultMap="BaseResultMap" >
    SELECT p.*,s.* FROM projects p LEFT JOIN (SELECT ff.* FROM follow ff WHERE ff.ID IN(SELECT MAX(f.ID) FROM follow f GROUP BY  f.projects_id)) s ON p.ID=s.projects_id WHERE p.`short_name` LIKE '%"#{shortName}"%';
  </select> -->
    <select id="findProjectByShortNameAll" resultType="java.util.HashMap">
        <!-- SELECT b.*,
        (SELECT COUNT(*) FROM follow a WHERE a.projects_id = b.`ID` AND a.status = 1)num,
        (SELECT MAX(f.status)s FROM follow f WHERE f.user_id = #{userId,jdbcType=VARCHAR}) AND f.projects_id = b.`ID` GROUP BY f.projects_id ) zz
        FROM projects b
        WHERE short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')  -->
       SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,stage.stage
        FROM projects mf 
        LEFT JOIN (SELECT s.project_id,s.stage,s.financing_time FROM project_financing_log s GROUP BY s.`project_id` ORDER BY financing_time DESC)stage ON mf.`id` = stage.project_id
        WHERE 
          mf.short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.kernel_desc LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT project_id FROM project_segmentation WHERE segmentation_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN
          (SELECT project_id FROM project_financing_log WHERE stage  LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.city LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT f.project_id FROM founders_work fw LEFT JOIN founders f ON fw.founder_id = f.id WHERE fw.work_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN (SELECT f.project_id FROM founders_education fe LEFT JOIN founders f ON fe.founder_id = f.id WHERE fe.education_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
        GROUP BY mf.id LIMIT #{sizea},#{froma}
    </select>
    <select id="findProjectByShortName"  parameterType="String" resultType="java.util.HashMap">
          SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,stage.stage
          FROM projects mf
          LEFT JOIN (SELECT s.project_id,s.stage,s.financing_time FROM project_financing_log s GROUP BY s.`project_id` ORDER BY financing_time DESC)stage ON mf.`id` = stage.project_id
          WHERE
          mf.short_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.kernel_desc LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT project_id FROM project_segmentation WHERE segmentation_name LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN
          (SELECT project_id FROM project_financing_log WHERE stage  LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.city LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')
          OR mf.id IN (SELECT f.project_id FROM founders_work fw LEFT JOIN founders f ON fw.founder_id = f.id WHERE fw.work_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%'))
          OR mf.id IN (SELECT f.project_id FROM founders_education fe LEFT JOIN founders f ON fe.founder_id = f.id WHERE fe.education_experience LIKE CONCAT('%',#{shortName,jdbcType=VARCHAR},'%')) 
          GROUP BY mf.id LIMIT 3
    </select>

    <select id="findProjectBySegmentation" parameterType="com.lhjl.tzzs.proxy.dto.SereachDto" resultType="java.util.HashMap">
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,mf.stage
        FROM view_segemention_info mf where 1=1
        <if test=" types !='' and types != null">
            AND mf.investment_institutions_type IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>
        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND mf.segmentation IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" stages !='' and stages != null">
            AND mf.stage IN
            <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
        </if>

        GROUP BY mf.id LIMIT #{sizea},#{froma}
    </select>

    <select id="findProjectBySview" parameterType="com.lhjl.tzzs.proxy.dto.SereachDto" resultType="java.util.HashMap">
        SELECT mf.id ID,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,
        (SELECT stage FROM project_financing_log WHERE project_id = mf.`id` ORDER BY financing_time DESC LIMIT 1)stage
        FROM projects mf
        WHERE 1=1
        <if test=" types !='' and types != null">
            AND mf.`investment_institutions_id` IN (SELECT id FROM investment_institutions WHERE `type` IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND mf.id IN (SELECT project_id FROM project_segmentation WHERE segmentation_name IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test=" stages !='' and stages != null">
            AND mf.id IN (SELECT project_id FROM project_financing_log WHERE stage IN
            <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test=" cities !='' and cities != null ">
            AND mf.city IN
            <foreach item="item" index="index" collection="cities" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" working_background_descs!='' and working_background_descs != null">
            AND mf.id IN (SELECT f.project_id FROM founders_work fw LEFT JOIN founders f ON fw.founder_id = f.id WHERE fw.work_experience IN
            <foreach item="item" index="index" collection="working_background_descs" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test="educational_background_descs!='' and educational_background_descs!= null">
            AND mf.id IN (SELECT f.project_id FROM founders_education fe LEFT JOIN founders f ON fe.founder_id = f.id WHERE fe.education_experience IN
            <foreach item="item" index="index" collection="educational_background_descs" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>
        GROUP BY mf.id LIMIT #{sizea},#{froma}
    </select>

    <select id="findByTodayProjects" resultMap="BaseResultMap" parameterType="com.lhjl.tzzs.proxy.model.Projects">
        select * from projects where investment_institutions_id =#{investmentInstitutionsId} and short_name =#{shortName} and to_days(create_time) = to_days(now())
    </select>

    <select id="maxSerialNumber" resultMap="BaseResultMap">
        select * from projects where serial_number between 100000 and 200000 order by serial_number desc;
    </select>



    <select id="findProjectBySviewA" resultType="java.util.HashMap">
       SELECT mf.id ID ,mf.short_name,mf.kernel_desc,mf.`city`,mf.`segmentation`,
        (SELECT stage FROM project_financing_log WHERE project_id = mf.`id` ORDER BY financing_time DESC LIMIT 1)stage
        FROM projects mf
        WHERE 1=1
        AND mf.id IN(SELECT a.project_id FROM project_financing_log a WHERE a.financing_time BETWEEN #{beginTime} AND #{endTime})
        <if test=" types !='' and types != null">
            AND mf.`investment_institutions_id` IN (SELECT id FROM investment_institutions WHERE `type` IN
            <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>
        <if test=" segmentations !='' and segmentations != null">
            AND mf.id IN (SELECT project_id FROM project_segmentation WHERE segmentation_name IN
            <foreach item="item" index="index" collection="segmentations" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test=" stages !='' and stages != null">
            AND mf.id IN (SELECT project_id FROM project_financing_log WHERE stage IN
            <foreach item="item" index="index" collection="stages" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test=" cities !='' and cities != null ">
            AND mf.city IN
            <foreach item="item" index="index" collection="cities" open="(" separator="," close=")">#{item}</foreach>
        </if>

        <if test=" working_background_descs!='' and working_background_descs != null">
            AND mf.id IN (SELECT f.project_id FROM founders_work fw LEFT JOIN founders f ON fw.founder_id = f.id WHERE fw.work_experience IN
            <foreach item="item" index="index" collection="working_background_descs" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>

        <if test="educational_background_descs!='' and educational_background_descs!= null">
            AND mf.id IN (SELECT f.project_id FROM founders_education fe LEFT JOIN founders f ON fe.founder_id = f.id WHERE fe.education_experience IN
            <foreach item="item" index="index" collection="educational_background_descs" open="(" separator="," close=")">#{item}</foreach>
            )
        </if>
        GROUP BY mf.id LIMIT #{sizea},#{froma}
    </select>
</mapper>