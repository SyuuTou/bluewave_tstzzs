<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjl.tzzs.proxy.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.Users">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="headpic" jdbcType="VARCHAR" property="headpic" />
    <result column="actual_name" jdbcType="VARCHAR" property="actualName" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="identity_type" jdbcType="INTEGER" property="identityType" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_duties" jdbcType="VARCHAR" property="companyDuties" />
    <result column="company_desc" jdbcType="VARCHAR" property="companyDesc" />
    <result column="demand" jdbcType="VARCHAR" property="demand" />
    <result column="headpic_real" jdbcType="VARCHAR" property="headpicReal" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="work_card" jdbcType="VARCHAR" property="workCard" />
    <result column="id_type" jdbcType="VARCHAR" property="idType" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="meta_app_id" jdbcType="INTEGER" property="metaAppId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
<!--  测试用zd-->
<select id="findUserById" parameterType="INTEGER" resultMap="BaseResultMap">
    SELECT * FROM users WHERE ID=#{userId}
  </select>	
  
  <select id="findSplit" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT * FROM users limit #{startPage},#{pageSize}
  </select>	
  
  <select id="findByUuid" parameterType="String" resultType="INTEGER">
    SELECT u.ID FROM users u WHERE u.uuid=#{uuids}
  </select>
  <select id="findByUserid" parameterType="INTEGER" resultType="INTEGER">
    SELECT c.level_id FROM user_level_relation c WHERE c.user_id =#{userId} AND c.yn=1 AND c.status =1
  </select>
  <select id="findByBei" parameterType="INTEGER" resultType="Float">
    SELECT m.ratio FROM meta_obtain_integral m WHERE m.user_level=#{leId} AND m.scene_key IN('iQMrkC4L','sdQbEZSe','rgJt3Vnk','D8TKEd9L')
  </select>
  <select id="findByJinE" parameterType="String" resultType="INTEGER">
    SELECT integral FROM meta_obtain_integral WHERE scene_key=#{skey}
  </select>
  <select id="findByUserLevel" parameterType="INTEGER" resultType="String">
    SELECT c.name FROM meta_user_level c WHERE c.ID=#{leId}
  </select>

  <select id="findUserList" parameterType="INTEGER" resultType="java.util.HashMap">
    SELECT u.create_time,u.actual_name,u.company_name,u.company_duties,u.ID,u.phonenumber,u.`desc`,u.identity_type,u.create_time,w.nick_name,i.investors_type
    FROM users u
    right join users_weixin w on w.user_id = u.ID
    left join investors i on w.user_id = i.user_id
    where u.actual_name is not null or w.nick_name is not null
    order by u.create_time desc
    limit #{startPage},#{pageSize} ;
  </select>

  <select id="findUserInfoAssemble" parameterType="INTEGER" resultType="java.util.HashMap">
    select u.actual_name,u.headpic,u.headpic_real,u.company_duties,w.nick_name,w.openId,t.token from users u
    right join users_weixin w on u.ID = w.user_id
    left join user_token t on w.user_id = t.user_id
    where u.ID = #{userId}
  </select>

  <select id="findUserComplexInfoOne" parameterType="String" resultType="java.util.HashMap">
    select u.actual_name,u.headpic,u.headpic_real,u.company_name,u.company_duties,w.nick_name from users u
    right join user_token t on u.ID = t.user_id
    left join users_weixin w on t.user_id = w.user_id
    where t.token = #{token}
  </select>
  <select id="findAdminList" resultType="java.util.HashMap">
    select aa.id,
    case when aa.actual_name is not null then aa.actual_name else
    (case when aa.nick_name is not null then aa.nick_name else "" end) end realnaem,
    aa.company_name,aa.company_duties,aa.phonenumber,mit.type_name as identity_type,
    i.investors_type,aa.create_time,cc.end_time,mul.`name`,aa.update_time
    from
    (SELECT u.id,u.actual_name,uw.nick_name,u.company_name,u.company_duties,u.phonenumber,u.identity_type,u.create_time,u.update_time
    FROM users u
    right join users_weixin uw on u.id = uw.user_id
    where (u.actual_name is not null
    or uw.nick_name is not null )
    and 1=1
    <if test="searchWord != null and  searchWord != ''">
      and (u.actual_name like CONCAT("%",CONCAT(#{searchWord}),"%")
          or u.company_name like CONCAT("%",CONCAT(#{searchWord}),"%")
          or u.company_duties like CONCAT("%",CONCAT(#{searchWord}),"%")
          or u.phonenumber like CONCAT("%",CONCAT(#{searchWord}),"%"))
    </if>
    <if test="identityType != null and identityType !=''">
      and (u.identity_type+1) = #{identityType}
    </if>
    <if test="begainTime != null and begainTime !=''">
      and u.create_time between #{begainTime} and #{endTime}
    </if>
    ) aa
    left join investors i on aa.id = i.user_id
    left join
    (select * from
        (select * from user_level_relation
        order by end_time desc) cc
      where cc.user_id is not null
      and cc.yn = 1
      group by cc.user_id
    ) cc on aa.id = cc.user_id
    left join meta_user_level mul on cc.level_id = mul.id
    left join meta_identity_type mit on (aa.identity_type+1) = mit.id
    where aa.id is not null
    <if test="investorType != null and investorType !=''">
      and i.investors_type =#{investorType}
    </if>
    <if test="userLevelType != null and userLevelType != ''">
      and cc.level_id = #{userLevelType}
    </if>
    group by aa.id
    <if test="registerTimeOrder != null and registerTimeOrder !=''">
      order by aa.create_time
      <if test="registerTimeOrderDesc != null and registerTimeOrderDesc !=''">
        desc
      </if>
    </if>
    <if test="updateTimeOrder != null and updateTimeOrder !=''">
      order by aa.update_time
      <if test="updateTimeOrder != null and updateTimeOrder !=''">
        desc
      </if>
    </if>
    <if test="userLevelEndTimeOrder != null and userLevelEndTimeOrder !=''">
      order by cc.end_time
      <if test="userLevelEndTimeOrderDesc != null and userLevelEndTimeOrderDesc !=''">
        desc
      </if>
    </if>
    limit #{startPage},#{pageSize}
  </select>

  <select id="findAdminListAllCount" resultType="java.lang.Integer">
    select count(*) ct from (
    select aa.id,
    case when aa.actual_name is not null then aa.actual_name else
    (case when aa.nick_name is not null then aa.nick_name else "" end) end realnaem,
    aa.company_name,aa.company_duties,aa.phonenumber,mit.type_name as identity_type,
    i.investors_type,aa.create_time,cc.end_time,mul.`name`,aa.update_time
    from
    (SELECT u.id,u.actual_name,uw.nick_name,u.company_name,u.company_duties,u.phonenumber,u.identity_type,u.create_time,u.update_time
    FROM users u
    right join users_weixin uw on u.id = uw.user_id
    where (u.actual_name is not null
    or uw.nick_name is not null )
    and 1=1
    <if test="searchWord != null and  searchWord != ''">
      and (u.actual_name like CONCAT("%",CONCAT(#{searchWord}),"%")
      or u.company_name like CONCAT("%",CONCAT(#{searchWord}),"%")
      or u.company_duties like CONCAT("%",CONCAT(#{searchWord}),"%")
      or u.phonenumber like CONCAT("%",CONCAT(#{searchWord}),"%"))
    </if>
    <if test="identityType != null and identityType !=''">
      and u.identity_type = #{identityType}
    </if>
    <if test="begainTime != null and begainTime !=''">
      and u.create_time between #{begainTime} and #{endTime}
    </if>
    ) aa
    left join investors i on aa.id = i.user_id
    left join
    (select * from
    (select * from user_level_relation
    order by end_time desc) cc
    where cc.user_id is not null
    and cc.yn = 1
    group by cc.user_id
    ) cc on aa.id = cc.user_id
    left join meta_user_level mul on cc.level_id = mul.id
    left join meta_identity_type mit on (aa.identity_type+1) = mit.id
    where aa.id is not null
    <if test="investorType != null and investorType !=''">
      and i.investors_type =#{investorType}
    </if>
    <if test="userLevelType != null and userLevelType != ''">
      and cc.level_id = #{userLevelType}
    </if>
    group by aa.id
    <if test="registerTimeOrder != null and registerTimeOrder !=''">
      order by aa.create_time
      <if test="registerTimeOrderDesc != null and registerTimeOrderDesc !=''">
        desc
      </if>
    </if>
    <if test="updateTimeOrder != null and updateTimeOrder !=''">
      order by aa.update_time
      <if test="updateTimeOrder != null and updateTimeOrder !=''">
        desc
      </if>
    </if>
    <if test="userLevelEndTimeOrder != null and userLevelEndTimeOrder !=''">
      order by cc.end_time
      <if test="userLevelEndTimeOrderDesc != null and userLevelEndTimeOrderDesc !=''">
        desc
      </if>
    </if>) abc
  </select>

  <select id="userInfoElegantSearch" resultType="java.util.HashMap">
    SELECT u.id,u.company_name,u.company_duties,u.phonenumber,
    case when u.actual_name is null then uw.nick_name else u.actual_name end user_name
    FROM users u
    right join users_weixin uw on u.id = uw.user_id
    where  1=1
    and (u.actual_name is not null or uw.nick_name is not null)
    <if test="searchWord != null and searchWord != ''">
      and (u.actual_name like CONCAT("%",CONCAT(#{searchWord},"%")) or uw.nick_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or u.company_name like CONCAT("%",CONCAT(#{searchWord},"%")) or u.company_duties like CONCAT("%",CONCAT(#{searchWord},"%")))
    </if>
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByName" resultMap="BaseResultMap">
    select u.actual_name, u.company_name, u.company_duties from users u where 1=1
    <if test="searchWord !=null and searchWord !=''">
      and actual_name like concat(concat("%",#{searchWord}),"%")
    </if>
  </select>
  
  <select id="selectUserListByToken" resultMap="BaseResultMap">
    SELECT
    case when u.actual_name is null then (case when uw.nick_name is null then "" else uw.nick_name end) else u.actual_name end actual_name,
    case when u.headpic_real is null then (case when u.headpic is null then "" else u.headpic end) else u.headpic_real end headpic_real,
    u.company_duties,
    u.uuid
    FROM users u
    right join users_weixin uw on u.ID = uw.user_id
    where u.actual_name != ""
    and u.actual_name is not null
    and u.uuid in
    <foreach collection="userTokens" item="item" separator="," open="(" close=")" index="index">#{item}</foreach>
  </select>
</mapper>