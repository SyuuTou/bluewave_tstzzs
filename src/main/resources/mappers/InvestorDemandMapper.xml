<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjl.tzzs.proxy.mapper.InvestorDemandMapper">
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.InvestorDemand">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="investor_id" jdbcType="INTEGER" property="investorId" />
    <result column="city_preference" jdbcType="VARCHAR" property="cityPreference" />
    <result column="demand" jdbcType="VARCHAR" property="demand" />
    <result column="investment_amount_low" jdbcType="DECIMAL" property="investmentAmountLow" />
    <result column="investment_amount_high" jdbcType="DECIMAL" property="investmentAmountHigh" />
    <result column="investment_amount_low_dollars" jdbcType="DECIMAL" property="investmentAmountLowDollars" />
    <result column="investment_amount_high_dollars" jdbcType="DECIMAL" property="investmentAmountHighDollars" />
    <result column="recently_concerned_subdivision_circuit" jdbcType="VARCHAR" property="recentlyConcernedSubdivisionCircuit" />
    <result column="concerned_founders_characteristic" jdbcType="VARCHAR" property="concernedFoundersCharacteristic" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="financing_stage" jdbcType="VARCHAR" property="financingStage" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="future" jdbcType="VARCHAR" property="future" />
    <result column="weights" jdbcType="INTEGER" property="weights" />
    <result column="demand_status" jdbcType="INTEGER" property="demandStatus" />
    <result column="appid" jdbcType="INTEGER" property="appid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_duties" jdbcType="VARCHAR" property="companyDuties" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="event_key" jdbcType="VARCHAR" property="eventKey" />
  </resultMap>
  
  <select id="getInvestorDemandList" resultType="java.util.HashMap">
    SELECT b.id,b.user_name,b.userid,
    case when u.headpic_real is null then (case when u.headpic is null then "" else u.headpic end) else u.headpic_real end headpic,
    b.company_name,b.company_duties,b.phonenumber,
    ids.segmentation,idsw.speedway,a.stage,b.investment_amount_low,b.investment_amount_high,
    b.investment_amount_low_dollars,b.investment_amount_high_dollars,idc.user_character,
    b.future,b.demand_status,b.update_time,b.event_key
    FROM investor_demand b
    left join users u on b.userid = u.id
    left join
    (SELECT investor_demand_id,group_concat(`character`) as user_character FROM investor_demand_character
    group by investor_demand_id) idc on b.id = idc.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(segmentation) segmentation FROM investor_demand_segmentation
    group by investor_demand_id) ids on b.id = ids.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(speedway) speedway FROM investor_demand_speedway
    group by investor_demand_id) idsw on b.id = idsw.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(mps.`name`) stage FROM investor_demand_stage idse
    left join meta_project_stage mps on idse.meta_project_stage_id = mps.id
    group by investor_demand_id) a on b.id = a.investor_demand_id
    where 1=1
    <if test="status != null and status.length &gt; 0">
    and b.demand_status in
      <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="isUser != null and isUser != ''">
      and b.demand_status != 3
    </if>
    <if test="appid != null and appid !=''">
      and b.appid = #{appid}
    </if>
    <if test="dataType != null and dataType !=''">
      and b.demand_status = #{dataType}
    </if>
    <if test="userId != null and userId !=''">
      and b.userid = #{userId}
    </if>
    order by b.creat_time desc
    limit #{startPage},#{pageSize}
  </select>
  <select id="getInvestorDemandListCount" resultType="java.lang.Integer">
    Select count(*) ct from(
    SELECT b.id,b.user_name,b.userid,
    case when u.headpic is null then (case when u.headpic_real is null then "" else u.headpic_real end) else u.headpic end headpic,
    b.company_name,b.company_duties,b.phonenumber,
    ids.segmentation,idsw.speedway,a.stage,b.investment_amount_low,b.investment_amount_high,
    b.investment_amount_low_dollars,b.investment_amount_high_dollars,idc.user_character,
    b.future,b.demand_status,b.update_time
    FROM investor_demand b
    left join users u on b.userid = u.id
    left join
    (SELECT investor_demand_id,group_concat(`character`) as user_character FROM investor_demand_character
    group by investor_demand_id) idc on b.id = idc.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(segmentation) segmentation FROM investor_demand_segmentation
    group by investor_demand_id) ids on b.id = ids.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(speedway) speedway FROM investor_demand_speedway
    group by investor_demand_id) idsw on b.id = idsw.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(mps.`name`) stage FROM investor_demand_stage idse
    left join meta_project_stage mps on idse.meta_project_stage_id = mps.id
    group by investor_demand_id) a on b.id = a.investor_demand_id
    where 1=1  
    <if test="status != null and status.length &gt; 0">
      and b.demand_status in
      <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="isUser != null and isUser != ''">
      and b.demand_status != 3
    </if>
    <if test="appid != null and appid !=''">
      and b.appid = #{appid}
    </if>
    <if test="dataType != null and dataType !=''">
      and b.demand_status = #{dataType}
    </if>
    <if test="userId != null and userId !=''">
      and b.userid = #{userId}
    </if>
    order by b.creat_time desc
    ) abc
  </select>

  <select id="selectDemandByUserId" resultType="java.util.HashMap">
    SELECT iid.id,
    case when ids.segmentation is null then iid.industry else ids.segmentation end segmentation,
    case when idsw.speedway is null then iid.recently_concerned_subdivision_circuit else idsw.speedway end speedway,
    case when a.stage is null then iid.financing_stage else a.stage end stage,
    case when idc.user_character is null then iid.concerned_founders_characteristic else idc.user_character end user_character,
    iid.investment_amount_low,iid.investment_amount_high,
    iid.investment_amount_low_dollars,iid.investment_amount_high_dollars,
    iid.future,iid.demand_status,iid.update_time,iid.demand_status,iid.creat_time
    FROM investor_demand iid
    left join
    (SELECT investor_demand_id,group_concat(`character`) as user_character FROM investor_demand_character
    group by investor_demand_id) idc on iid.id = idc.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(segmentation) segmentation FROM investor_demand_segmentation
    group by investor_demand_id) ids on iid.id = ids.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(speedway) speedway FROM investor_demand_speedway
    group by investor_demand_id) idsw on iid.id = idsw.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(mps.id) stage FROM investor_demand_stage idse
    left join meta_project_stage mps on idse.meta_project_stage_id = mps.id
    group by investor_demand_id) a on iid.id = a.investor_demand_id
    where iid.userid = #{userId}
    and iid.appid = #{appid}
  </select>

  <select id="selectByInvestorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from investor_demand where investor_id=#{investorId} limit 0,1;
  </select>

  <select id="getInvestorDemandListBackStage" resultType="java.util.HashMap">
    SELECT b.id,b.user_name,b.userid,
    case when u.headpic_real is null then (case when u.headpic is null then "" else u.headpic end) else u.headpic_real end headpic,
    b.company_name,b.company_duties,b.phonenumber,
    ids.segmentation,idsw.speedway,a.stage,b.investment_amount_low,b.investment_amount_high,
    b.investment_amount_low_dollars,b.investment_amount_high_dollars,idc.user_character,
    b.future,b.demand_status,b.creat_time,b.update_time,b.event_key
    FROM investor_demand b
    left join users u on b.userid = u.id
    left join
    (SELECT investor_demand_id,group_concat(`character`) as user_character FROM investor_demand_character
    group by investor_demand_id) idc on b.id = idc.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(segmentation) segmentation FROM investor_demand_segmentation
    group by investor_demand_id) ids on b.id = ids.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(speedway) speedway FROM investor_demand_speedway
    group by investor_demand_id) idsw on b.id = idsw.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(mps.`name`) stage FROM investor_demand_stage idse
    left join meta_project_stage mps on idse.meta_project_stage_id = mps.id
    group by investor_demand_id) a on b.id = a.investor_demand_id
    UNION ALL
    SELECT b.id,iii.name,b.userid,
    case when u.headpic_real is null then (case when u.headpic is null then "" else u.headpic end) else u.headpic_real end headpic,
    iii.short_name,iii.position,iii.phone,
    ids.segmentation,idsw.speedway,a.stage,b.investment_amount_low,b.investment_amount_high,
    b.investment_amount_low_dollars,b.investment_amount_high_dollars,idc.user_character,
    b.future,b.demand_status,b.creat_time,b.update_time,b.event_key
    FROM investor_demand b
    left join
    (SELECT i.ID, ii.short_name, i.name, i.position, i.phone from investors i
    left join investment_institutions ii on i.investment_institutions_id = ii.ID) iii on b.investor_id = iii.ID
    left join users u on b.userid = u.id
    left join
    (SELECT investor_demand_id,group_concat(`character`) as user_character FROM investor_demand_character
    group by investor_demand_id) idc on b.id = idc.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(segmentation) segmentation FROM investor_demand_segmentation
    group by investor_demand_id) ids on b.id = ids.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(speedway) speedway FROM investor_demand_speedway
    group by investor_demand_id) idsw on b.id = idsw.investor_demand_id
    left join
    (SELECT investor_demand_id,group_concat(mps.`name`) stage FROM investor_demand_stage idse
    left join meta_project_stage mps on idse.meta_project_stage_id = mps.id
    group by investor_demand_id) a on b.id = a.investor_demand_id
    where 1=1
    <if test="status != null and status.length &gt; 0">
      and b.demand_status in
      <foreach close=")" collection="status" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="isUser != null and isUser != ''">
      and b.demand_status != 3
    </if>
    <if test="appid != null and appid !=''">
      and b.appid = #{appid}
    </if>
    <if test="dataType != null and dataType !=''">
      and b.demand_status = #{dataType}
    </if>
    <if test="userId != null and userId !=''">
      and b.userid = #{userId}
    </if>
    order by creat_time desc
    limit #{startPage},#{pageSize}
  </select>
</mapper>