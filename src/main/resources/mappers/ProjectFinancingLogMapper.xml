<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjl.tzzs.proxy.mapper.ProjectFinancingLogMapper">
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.ProjectFinancingLog">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="financing_time" jdbcType="DATE" property="financingTime" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="calculation_amount_status" jdbcType="INTEGER" property="calculationAmountStatus" />
    <result column="currency" jdbcType="INTEGER" property="currency" />
    <result column="stock_right" jdbcType="DECIMAL" property="stockRight" />
    <result column="pr_amount" jdbcType="DECIMAL" property="prAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="share_divest" jdbcType="VARCHAR" property="shareDivest" />
    <result column="valuation" jdbcType="DECIMAL" property="valuation" />
    <result column="Investment_institutions_list" jdbcType="VARCHAR" property="investmentInstitutionsList" />
    <result column="proportion_list" jdbcType="VARCHAR" property="proportionList" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="amount_status" jdbcType="INTEGER" property="amountStatus" />
    <result column="total_amount_status" jdbcType="INTEGER" property="totalAmountStatus" />
    <result column="financing_time_year" jdbcType="VARCHAR" property="financingTimeYear" />
    <result column="project_financing_useful" jdbcType="VARCHAR" property="projectFinancingUseful" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="data_soruce_type_id" jdbcType="INTEGER" property="dataSoruceTypeId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="yn" jdbcType="INTEGER" property="yn" />
  </resultMap>
  
	
	<select id="fetchFinancingStatus" resultType="String">  
		select distinct(stage) from project_financing_log where stage is not null and stage !=""
    </select>
	  
  <select id="selectProjectFinancingLogList" parameterType="Integer" resultMap="BaseResultMap">
    select * from project_financing_log where project_id = #{projectId} and `status`= #{projectStatus}
    group by stage
    order by financing_time desc
  </select>
  <select id="selectInvestors" resultType="String">
    select ii.short_name from investment_institutions_project iip
    left join investment_institutions ii on iip.investment_institutions_id = ii.ID
    where project_id = #{pflid}
    limit 0,3
  </select>
  <select id="getProjectFinancingLogList" resultType="java.util.HashMap">
    SELECT pfl.ID,pfl.serial_number,mdst.type_name,ii.id as investment_institution_id,ii.short_name as institution_name,
    p.id as project_id,p.short_name as project_name,ps.segmentation_name,pfl.stage,pfl.amount,pfl.currency,
    pfl.share_divest,pfl.valuation,pfl.total_amount,pfl.pr_amount,pfl.financing_time,pfl.Investment_institutions_list,
    pfl.proportion_list,pfl.create_time,pfl.update_time
    FROM project_financing_log pfl
    left join meta_data_source_type mdst on pfl.data_soruce_type_id = mdst.id
    left join investment_institutions_project iip on pfl.id = iip.project_id
    left join investment_institutions ii on iip.investment_institutions_id = ii.id
    left join projects p on pfl.project_id = p.id
    left join
    (select project_id,group_concat(segmentation_name) segmentation_name from project_segmentation group by project_id) ps
    on p.id = ps.project_id
    where 1=1
    <if test="searchWord != null and searchWord !=''">
      and
      (ii.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or p.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or ps.segmentation_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.stage like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.Investment_institutions_list like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.proportion_list like CONCAT("%",CONCAT(#{searchWord},"%")))
    </if>
    <if test="begainTime != null and begainTime != ''">
      and
      (pfl.create_time between #{begainTime} and #{endTime}
      or pfl.update_time between #{begainTime} and #{endTime})
    </if>
    <if test="stage != null and stage.length &gt; 0">
      and pfl.stage in ${stage}
    </if>
    <if test="currency != null and currency.length &gt;0">
      and pfl.currency in ${currency}
    </if>
    <if test="dataSource != null and dataSource.length &gt; 0">
      and pfl.data_soruce_type_id in ${dataSource}}
    </if>
    <if test="creatTimeOrder != null and creatTimeOrder !=''">
      order by pfl.create_time
      <if test="creatTimeOrderDesc != null and creatTimeOrderDesc !=''">
        desc
      </if>
    </if>
    <if test="updateTimeOrder != null and updateTimeOrder !=''">
      order by pfl.update_time
      <if test="updateTimeOrderDesc != null and updateTimeOrderDesc !=''">
        desc
      </if>
    </if>
    limit #{startPage},#{pageSize};
  </select>
  <select id="getProjectFinancingLogListCount" resultType="java.lang.Integer">
    select count(*) ct from (
    SELECT pfl.ID,pfl.serial_number,mdst.type_name,ii.id as investment_institution_id,ii.short_name as institution_name,
    p.id as project_id,p.short_name as project_name,ps.segmentation_name,pfl.stage,pfl.amount,pfl.currency,
    pfl.share_divest,pfl.valuation,pfl.total_amount,pfl.pr_amount,pfl.financing_time,pfl.Investment_institutions_list,
    pfl.proportion_list,pfl.create_time,pfl.update_time
    FROM project_financing_log pfl
    left join meta_data_source_type mdst on pfl.data_soruce_type_id = mdst.id
    left join investment_institutions_project iip on pfl.id = iip.project_id
    left join investment_institutions ii on iip.investment_institutions_id = ii.id
    left join projects p on pfl.project_id = p.id
    left join
    (select project_id,group_concat(segmentation_name) segmentation_name from project_segmentation group by project_id) ps
    on p.id = ps.project_id
    where 1=1
    <if test="searchWord != null and searchWord !=''">
      and
      (ii.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or p.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or ps.segmentation_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.stage like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.Investment_institutions_list like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.proportion_list like CONCAT("%",CONCAT(#{searchWord},"%")))
    </if>
    <if test="begainTime != null and begainTime != ''">
      and
      (pfl.create_time between #{begainTime} and #{endTime}
      or pfl.update_time between #{begainTime} and #{endTime})
    </if>
    <if test="stage != null and stage.length &gt; 0">
      and pfl.stage in ${stage}
    </if>
    <if test="currency != null and currency.length &gt;0">
      and pfl.currency in ${currency}
    </if>
    <if test="dataSource != null and dataSource.length &gt; 0">
      and pfl.data_soruce_type_id in ${dataSource}}
    </if>
    <if test="creatTimeOrder != null and creatTimeOrder !=''">
      order by pfl.create_time
      <if test="creatTimeOrderDesc != null and creatTimeOrderDesc !=''">
        desc
      </if>
    </if>
    <if test="updateTimeOrder != null and updateTimeOrder !=''">
      order by pfl.update_time
      <if test="updateTimeOrderDesc != null and updateTimeOrderDesc !=''">
        desc
      </if>
    </if>
   ) abc
  </select>

  <select id="selectByProjectId" resultMap="BaseResultMap">
    select * from project_financing_log where project_id=#{projectId};
  </select>
</mapper>