<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjl.tzzs.proxy.mapper.ProjectFinancingLogMapper">
  <resultMap id="BaseResultMap" type="com.lhjl.tzzs.proxy.model.ProjectFinancingLog">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="financing_time" jdbcType="DATE" property="financingTime" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="calculation_amount_status" jdbcType="INTEGER" property="calculationAmountStatus" />
    <result column="currency" jdbcType="INTEGER" property="currency" />
    <result column="stock_right" jdbcType="DECIMAL" property="stockRight" />
    <result column="pr_amount" jdbcType="DECIMAL" property="prAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="share_divest" jdbcType="VARCHAR" property="shareDivest" />
    <result column="valuation" jdbcType="DECIMAL" property="valuation" />
    <result column="Investment_institutions_list" jdbcType="VARCHAR" property="investmentInstitutionsList" />
    <result column="proportion_list" jdbcType="VARCHAR" property="proportionList" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="amount_status" jdbcType="INTEGER" property="amountStatus" />
    <result column="total_amount_status" jdbcType="INTEGER" property="totalAmountStatus" />
    <result column="financing_time_year" jdbcType="VARCHAR" property="financingTimeYear" />
    <result column="project_financing_useful" jdbcType="VARCHAR" property="projectFinancingUseful" />
    <result column="data_soruce_type_id" jdbcType="INTEGER" property="dataSoruceTypeId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="yn" jdbcType="INTEGER" property="yn" />
    <result column="submitter" jdbcType="VARCHAR" property="submitter" />
  </resultMap>
  
  <resultMap id="ProjectFinancingLogHeadOutputDtoMap" type="com.lhjl.tzzs.proxy.dto.projectfinancinglog.ProjectFinancingLogHeadOutputDto">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="short_name" jdbcType="VARCHAR" property="projectName" />
    <result column="submitter" jdbcType="VARCHAR" property="submitter" />
    <result column="meta_follow_status_id" jdbcType="INTEGER" property="followStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  
  <resultMap id="ProjectFinancingLogOutputDtoMap" type="com.lhjl.tzzs.proxy.dto.ProjectFinancingLogOutputDto">
    <result column="ID" jdbcType="INTEGER" property="id" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="institution_name" jdbcType="VARCHAR" property="institutionName" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="segmentation_name" jdbcType="VARCHAR" property="segmentationName" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="currency" jdbcType="INTEGER" property="currency" />
    <result column="share_divest" jdbcType="VARCHAR" property="shareDivest" />
    <result column="valuation" jdbcType="DECIMAL" property="valuation" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="pr_amount" jdbcType="DECIMAL" property="prAmount" />
    <result column="financing_time" jdbcType="TIMESTAMP" property="financingTime" />
    <result column="Investment_institutions_list" jdbcType="VARCHAR" property="InvestmentInstitutionsList" />
    <result column="proportion_list" jdbcType="VARCHAR" property="proportionList" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <!-- 审核状态 -->
    <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
    <!-- 审核时间 -->
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <!-- 提交人token -->
	<!-- <result column="submitter" jdbcType="VARCHAR" property="submitter" /> -->
	
	<!-- 用户id -->
	<result column="user_id" jdbcType="INTEGER" property="userId" />
	<!-- 提交人姓名 -->
	<result column="actual_name" jdbcType="VARCHAR" property="actualName" />
  </resultMap>
  
  <select id="selectAllHistoryFinancing" resultMap="BaseResultMap">
  select * from project_financing_log where project_id=#{projectId} and financing_time is not null and approval_status = 1 and yn =0;
  </select>
	
  <select id="getProjectFinancingLogLists" resultMap="ProjectFinancingLogOutputDtoMap">
    SELECT pfl.ID,pfl.serial_number,mdst.type_name,ii.id as investment_institution_id,ii.short_name as institution_name,
    p.id as project_id,p.short_name as project_name,ps.segmentation_name,pfl.stage,pfl.amount,pfl.currency,
    pfl.share_divest,pfl.valuation,pfl.total_amount,pfl.pr_amount,pfl.financing_time,pfl.Investment_institutions_list,
    pfl.proportion_list,pfl.create_time,pfl.update_time,pfl.approval_status,pfl.approval_time,pfl.submitter,ut.user_id,u.actual_name
    FROM project_financing_log pfl
    left join meta_data_source_type mdst on pfl.data_soruce_type_id = mdst.id
    left join investment_institutions_project iip on pfl.id = iip.project_id
    left join investment_institutions ii on iip.investment_institutions_id = ii.id
    left join projects p on pfl.project_id = p.id
    left join
    <choose>
    	<when test="segmentationName !=null and segmentationName.size() &gt; 0">
    		( select project_id,group_concat(segmentation_name) segmentation_name from ( select * from project_segmentation where segmentation_name in 
    		<foreach collection="segmentationName" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
    		 ) temp 
    		group by temp.project_id ) ps
    		on p.id = ps.project_id
    	</when>
    	<otherwise>
    		(select project_id,group_concat(segmentation_name) segmentation_name from project_segmentation group by project_id) ps
    		on p.id = ps.project_id
    	</otherwise>
    </choose>
    <!-- 取得提交人姓名以及提交人id -->
    left join user_token ut on pfl.submitter = ut.token
    left join users u on ut.user_id = u.ID
    where 1=1
    
     <if test="searchWord != null and searchWord !=''">
      and  
        ( ii.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or p.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or ps.segmentation_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.stage like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.Investment_institutions_list like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.proportion_list like CONCAT("%",CONCAT(#{searchWord},"%")) ) 
    </if>
    <if test="beginTime !=null">
     AND (pfl.create_time &gt;= #{beginTime} 
     or pfl.update_time &gt;= #{beginTime}
     )
    </if>
    
    <if test="endTime !=null">
     AND (pfl.create_time &lt;= #{endTime}
     or pfl.update_time &lt;= #{beginTime}
     )
    </if>
    
    <if test="stage != null and size() &gt; 0">
      and pfl.stage in 
	<foreach close=")" collection="stage" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="currency != null and currency.size() &gt; 0">
      and pfl.currency in 
      <foreach close=")" collection="currency" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="approvalStatus != null and approvalStatus.size() &gt; 0">
      and pfl.approval_status in 
      <foreach close=")" collection="approvalStatus" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="dataSource != null and dataSource.size() &gt; 0">
      and pfl.data_soruce_type_id in  
      <foreach close=")" collection="dataSource" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="column != null and column !='' and order != null and order != ''">
      order by pfl.${column} ${order}
    </if> 
   LIMIT #{start},#{pageSize}
   </select>
	
  
  <select id="getProjectFinancingLogListCount" resultType="java.lang.Integer">
    select count(*) 
    FROM project_financing_log pfl
    left join meta_data_source_type mdst on pfl.data_soruce_type_id = mdst.id
    left join investment_institutions_project iip on pfl.id = iip.project_id
    left join investment_institutions ii on iip.investment_institutions_id = ii.id
    left join projects p on pfl.project_id = p.id
    left join
    <choose>
    	<when test="segmentationName !=null and segmentationName.size() &gt; 0">
    		( select project_id,group_concat(segmentation_name) segmentation_name from ( select * from project_segmentation where segmentation_name in 
    		<foreach collection="segmentationName" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
    		 ) temp 
    		group by temp.project_id ) ps
    		on p.id = ps.project_id
    	</when>
    	<otherwise>
    		(select project_id,group_concat(segmentation_name) segmentation_name from project_segmentation group by project_id) ps
    		on p.id = ps.project_id
    	</otherwise>
    </choose>
    <!-- 取得提交人姓名-->
    left join user_token ut on pfl.submitter = ut.token
    left join users u on ut.user_id = u.ID
    where 1=1  
    <if test="searchWord != null and searchWord !=''">  
      and
      (ii.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or p.short_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or ps.segmentation_name like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.stage like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.Investment_institutions_list like CONCAT("%",CONCAT(#{searchWord},"%"))
      or pfl.proportion_list like CONCAT("%",CONCAT(#{searchWord},"%")) )
    </if>
    <!-- <if test="beginTime !=null and endTime !=null">
     AND pfl.create_time &lt;= #{endTime}
     
    	and
      ( pfl.create_time between #{beginTime} and #{endTime}
      or pfl.update_time between #{beginTime} and #{endTime} )
    </if> -->
    <if test="beginTime !=null">
     AND (pfl.create_time &gt;= #{beginTime} 
     or pfl.update_time &gt;= #{beginTime}
     )
    </if>
    <if test="endTime !=null">
     AND (pfl.create_time &lt;= #{endTime}
     or pfl.update_time &lt;= #{beginTime}
     )
    </if>
    <if test="stage != null and stage.size() &gt; 0">
      and pfl.stage in 
      <foreach close=")" collection="stage" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="currency != null and currency.size() &gt; 0">
      and pfl.currency in 
      <foreach close=")" collection="currency" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="approvalStatus != null and approvalStatus.size() &gt; 0">
      and pfl.approval_status in 
      <foreach close=")" collection="approvalStatus" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
    <if test="dataSource != null and dataSource.size() &gt; 0">
      and pfl.data_soruce_type_id in  
      <foreach close=")" collection="dataSource" index="index" item="item" open="(" separator=",">#{item}</foreach>
    </if>
  </select>
  
  
  
  <select id="echoProjectFinancingLogHead" parameterType="Integer" resultMap="ProjectFinancingLogHeadOutputDtoMap">  
  <!-- pflf.submitor_token, -->
	SELECT * from(select pfl.id,pfl.serial_number,mdst.type_name,p.short_name,pfl.submitter,pflf.meta_follow_status_id,pflf.create_time
    FROM project_financing_log pfl
    left join meta_data_source_type mdst on pfl.data_soruce_type_id = mdst.id
    left join projects p on pfl.project_id = p.ID
	left join (select * from project_financial_log_follow_status ORDER BY create_time desc) pflf on pflf.project_financial_log_id = pfl.ID 
	GROUP BY pfl.ID) tmp
 	where tmp.id=#{projectFinancingLogId}
   </select>
   
   <select id="fetchFinancingStatus" resultType="String">  
	select distinct(stage) from project_financing_log where stage is not null and stage !=""
   </select>
	  
  <select id="selectProjectFinancingLogList" parameterType="Integer" resultMap="BaseResultMap">
    select * from project_financing_log where project_id = #{projectId} and `status`= #{projectStatus}
    group by stage
    order by financing_time desc
  </select>
  
  <select id="selectInvestors" resultType="String">
    select ii.short_name from investment_institutions_project iip
    left join investment_institutions ii on iip.investment_institutions_id = ii.ID
    where project_id = #{pflid}
    limit 0,3
  </select>
  
  <select id="selectByProjectId" resultMap="BaseResultMap">
   select * from project_financing_log 
   where project_id=#{projectId} 
   and financing_time is null 
   and approval_status =1
  </select>
</mapper>